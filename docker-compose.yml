services:
  backend:
    image: backend/todoapp
    build:
      context: ./backend/TodoApi
      dockerfile: Dockerfile
    ports:
      - "5053:5053"
    expose:
      - "5053"
    networks:
      - todoapp-network
    environment:
      - ASPNETCORE_URLS=http://+:5053
      - ConnectionStrings__TodoDbContext=Host=database;Port=5432;Database=tododb;Username=postgres;Password=yourpassword
    depends_on:
      - database

  frontend:
    image: todoapp/frontend
    build:
      context: ./frontend/todo-app
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      PROXY_API: http://backend:5053
    ports:
      - "3000:3000"
    networks:
      - todoapp-network

  database:
    image: postgres:16-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=yourpassword
      - POSTGRES_DB=tododb
    ports:
      - "5432:5432"
    volumes:
      - db-postgres-data:/var/lib/postgresql/data
    networks:
      - todoapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  todoapp-network:
    driver: bridge

volumes:
    db-postgres-data: